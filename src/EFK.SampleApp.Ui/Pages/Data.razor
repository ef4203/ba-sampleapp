@page "/Data"
@using EFK.SampleApp.Common
@using Microsoft.Fast.Components.FluentUI

@inject HttpClient Http;

<h2>Data</h2>
<FluentButton IconStart="@(new Icons.Regular.Size16.ArrowClockwise())"
              Appearance="Appearance.Accent"
              Loading="@loading"
              OnClick="@Refresh">
    Refresh
</FluentButton>

@if (measurements == null)
{
    <FluentProgressRing style="width: 102px; height: 102px;"></FluentProgressRing>
}
else
{
    <FluentDataGrid Items="measurements">
        <PropertyColumn Property="@(x => x.Timestamp)"/>
        <PropertyColumn Property="@(x => x.Value)"/>
    </FluentDataGrid>
}

@code {

    private bool loading;

    private IQueryable<Measurement>? measurements;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        var result = await Http.GetFromJsonAsync<Measurement[]>("http://localhost:8000/api/measurements");
        measurements = result?.AsQueryable();
    }

    private async Task Refresh()
    {
        loading = true;
        await Task.Delay(100);
        var result = await Http
            .GetFromJsonAsync<Measurement[]>("http://localhost:8000/api/measurements");
        measurements = result?.AsQueryable();
        loading = false;
    }

}
